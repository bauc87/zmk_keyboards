/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

&mt {
        tapping-term-ms = <400>;
    };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CAPS |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | LCTRL | LWR | SPC |   | RCMD | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LSHIFT CAPS  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LCTRL &mo LOWER &mt LCMD SPACE   &mt RCMD SPACE &mo RAISE &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | TAB  |BTCLR| BT1 | BT2 | BT3 | BT4 |   | BT5 |     |  UP |     |     |      |
// | LSHFT|     |     |     |     |     |   |     | LFT | DWN | RGT |     | ENT  |
//                    | LCTRL | LWR | SPC |   | ENT | RSE | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6       &kp N7   &kp N8     &kp N9    &kp N0 &kp BSPC
   &kp TAB    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3     &bt BT_SEL 4 &trans   &kp UP     &trans    &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans       &kp LEFT &kp DOWN   &kp RIGHT &trans &kp RET
                                    &kp LCTRL     &trans       &mt LCMD SPACE      &mt RCMD SPACE  &mo ADJUST   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | TAB |     |     |     |     |     |   |  =  |  -  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp TAB  &trans   &trans &trans   &trans   &trans      &kp EQUAL &kp MINUS  &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans  &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LCTRL &trans   &mt LCMD SPACE   &mt RCMD SPACE   &trans    &kp RALT
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  RGB ON/OFF |  RGB SPEED +          |  RGB SPEED -  |  RGB HUI +  |  RGB HUD - |   |  backlight ON/OFF  |  backlight bright +  |  backlight birht -  |  backlight cycle  |    | BSPC |
// | TAB  |  RGB SAT +  |  RGB SAT -            |  RGB BRI +    |  RGB BRI -  | RGB VERDE  |   |  BRIGHT SET 10  |  BRIGHT SET 25  |  BRIGHT SET 50  |  BRIGHT SET 75  |  BRIGHT SET 100  |     |
// | SHFT |  RGB CYLCES |  RGB CYCLES REVERSE   |  RGB AZUL     |  RGB BLANCO |            |   |    |    |    |    |  |    |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                         bindings = <
   &kp ESC  &rgb_ug RGB_TOG   &rgb_ug RGB_SPI &rgb_ug RGB_SPD                           &rgb_ug RGB_HUI                     &rgb_ug RGB_HUD                                     &bl BL_TOG    &bl BL_INC    &bl BL_DEC     &bl BL_CYCLE  &trans         &kp BSPC
   &kp TAB  &rgb_ug RGB_SAI   &rgb_ug RGB_SAD &rgb_ug RGB_BRI                           &rgb_ug RGB_BRD                     &rgb_ug RGB_COLOR_HSB(128,100,100)                  &bl BL_SET 10 &bl BL_SET 25 &bl BL_SET 50  &bl BL_SET 75 &bl BL_SET 100 &trans
   &kp LSHFT &rgb_ug RGB_EFF  &rgb_ug RGB_EFR &rgb_ug RGB_COLOR_HSB(0,0,255)            &rgb_ug RGB_COLOR_HSB(255,255,255)  &trans                                              &trans     &trans      &trans       &trans      &trans       &trans
                              &kp LCTRL &trans   &mt LCMD SPACE   &mt RCMD SPACE   &trans    &kp RALT
                                                >;
                                        };
        };
};
